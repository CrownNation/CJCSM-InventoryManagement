
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@import './theme-palettes.scss';


$cjcsm-primary: mat.define-palette($cjcsm-gray);
$cjcsm-accent: mat.define-palette($cjcsm-red);
$cjcsm-warn: mat.define-palette($cjcsm-warn);

$cjcsm-theme: mat.define-light-theme((
  color: (
    primary: $cjcsm-primary,
    accent: $cjcsm-accent,
    warn: $cjcsm-warn,
  )
));


@include mat.core-theme($cjcsm-theme);
@include mat.all-component-themes($cjcsm-theme);


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.main-heading {
  text-transform: uppercase;
  margin: 0 0 20px 0;
}

.container-tab {
  display: flex;
  align-items: flex-start;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 15px;
}

.spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-bottom: 15px;
}


.section-search {
  flex: 1 1 auto;
  align-self: flex-start;
}

.section-view {
  flex: 1 1 auto;
  align-self: flex-start;
}

.container-description {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
  padding-bottom: 20px;
}

.element-description {
  padding: 5px;
}

// Note: This is how to define the color of the snack bar. It apparently needs to be in the component's scss file as
// the global one doesn't work.
// ::ng-deep .mat-mdc-snack-bar-container.success-notification-overlay {
//     --mdc-snackbar-container-color: blue;
//     --mat-mdc-snack-bar-button-color: #fff;
//     --mdc-snackbar-supporting-text-color: #fff;
//   }


// Global styles.scss
.mat-mdc-snack-bar-container {
  // Default snack bar styles

  background-color: transparent;


}

.mat-mdc-snack-bar-container.snack-bar {
  .mdc-snackbar__surface {  
    background-color: #333;
    border-radius: .5rem;
  }

  .mdc-snackbar__label {
      color: #fff; // White text for readability
  }

  .mat-mdc-button {
      color: #fff; // White text for readability
      margin-left: .5rem;
  }

  .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){
      background-color: #777;
      color: white;
  }
}

.mat-mdc-snack-bar-container.error-snack-bar {
  .mdc-snackbar__surface {  
    background-color: #9d2b2b;
    border-radius: .5rem;
  }

  .mdc-snackbar__label {
      color: #fff; // White text for readability
  }

  .mat-mdc-button {
      color: #fff; // White text for readability
      background-color: #333;
      margin-left: .5rem;
  }

  .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){
      background-color: #333;
      color: white;
  }
}

.mat-mdc-snack-bar-container.confirmation-snack-bar {

  .mdc-snackbar__surface {  
    background-color: #48A070;
    border-radius: .5rem;
  }

  .mdc-snackbar__label {
      color: #fff; // White text for readability
  }

  .mat-mdc-button {
      color: #fff; // White text for readability
      background-color: #333;
      margin-left: .5rem;
  }

  .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){
      background-color: #333;
      color: white;
  }
}

/* For some reason flex is by default auto which makes dropdowns too tall. Need to do it globally or it gets overwritten. */
.container-horizontal .mat-mdc-text-field-wrapper {
  height: auto;
  flex: none !important;
}